{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/contactsActions.js","redux/contactsOperation.js","redux/contactsReducer.js","redux/store.js","redux/contactsSelectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","name","number","payload","id","shortid","generate","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","response","data","addContact","contact","post","deleteContact","contactId","delete","items","createReducer","fulfilled","_","state","filter","actions","action","contactsReducer","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","devTools","process","getItems","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","formSubmitHandler","newNumber","newName","find","alert","onSubmit","className","styles","form","e","preventDefault","handleSubmit","label","inputForm","type","value","onChange","target","pattern","title","required","btnForm","Filter","input","ContactList","contactsList","map","contactItem","btnContact","onClick","onDeleteContact","App","useEffect","wrapper","length","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00efbe14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__14Z-h\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"btnContact\":\"ContactList_btnContact__1cPva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\n// export const contacts = () => ({\n//   type: 'contacts',\n//   payload:\n//     // JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n// });\n\nexport const changeFilter = createAction('changeFilter');\n\nexport const addContact = createAction('addContact', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('deleteContact');\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3003';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const response = await axios.get('/contacts');\n    return response.data;\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async contact => {\n    const response = await axios.post('/contacts', contact);\n    return response.data;\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async contactId => {\n    await axios.delete(`/contacts/${contactId}`);\n    return contactId;\n  },\n);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contactsActions';\nimport { fetchContacts, addContact, deleteContact } from './contactsOperation';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({ items, filter });\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contactsReducer';\n\nconst middleware = [...getDefaultMiddleware()];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    // persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport { store };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\n// export const getVisibleContacts = state => {\n//   const items = getItems(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return items.filter(\n//     contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter) ||\n//       contact.number.includes(filter),\n//   );\n// };\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactsOperation';\nimport { getItems } from '../../redux/contactsSelectors';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const contacts = useSelector(getItems);\n\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact({ name, number }));\n\n  const repeatName = newName => {\n    return contacts.find(contact => contact.name === newName);\n  };\n\n  const repeatNumber = newNumber => {\n    return contacts.find(contact => contact.number === newNumber);\n  };\n\n  const formSubmitHandler = (name, number) => {\n    if (!repeatName(name) && !repeatNumber(number)) {\n      onSubmit(name, number);\n    } else {\n      alert(`${name} or ${number} is already in contacts`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    formSubmitHandler(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={e => handleSubmit(e)}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.btnForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/contactsActions';\nimport { getFilter } from '../../redux/contactsSelectors';\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onInputChange = e => dispatch(actions.changeFilter(e.target.value));\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { getVisibleContacts } from '../../redux/contactsSelectors';\nimport { deleteContact } from '../../redux/contactsOperation';\n// import * as actions from '../../redux/contactsActions';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactItem}>\n          {name} --- {number}\n          <button\n            className={styles.btnContact}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { getItems } from './redux/contactsSelectors';\nimport styles from './App.module.css';\nimport { fetchContacts } from './redux/contactsOperation';\n\nfunction App() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 && (\n        <>\n          <h2 className={styles.titleContacts}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"btnForm\":\"ContactForm_btnForm__RrRV0\"};"],"sourceRoot":""}